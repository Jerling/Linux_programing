* 第三章 索引结构
[[file:img/2018-12-20-093146_395x317_scrot.png]]


** 索引结构基础
- 基本概念
  1. 存储结构由文件构成
  2. 数据文件可以存储一个关系或多个索引文件
  3. 索引文件建立查找键和数据记录之间的关系
  4. 查找键的指针指向与查找键具有相同的记录
- 索引
  1. 可以是“稠密的”：数据文件中每个记录在索引文件中都设有一个索引项
  2. 可以是“稀疏的”：数据文件中只有一些记录在索引文件中表示出来，通常为每个数据块在索引文件中设有一个索引项
  3. 可以是"主索引"或"辅助索引"：主索引能确定记录在数据文件中的位置，而辅助索引不能

*** 顺序文件
    是对关系中的元组按主键进行排序而生成的文件。

*** 稠密索引
    在排好序的记录上建立稠密索引，块中只存放记录的键以及指向记录本身的指针。文件中的索引块保持键的顺序与文件中的排序顺序
一致。

[[file:img/2018-12-20-101416_791x448_scrot.png]]

- 索引有效的因素：
  1. 索引块数量通常比数据块数量少
  2. 由于键的排序，使用二分查找
  3. 索引文件可能足够小，可以永久地存放在主存缓冲区中

*** 稀疏索引
    只为数据文件的每个存储块设一个键-指针对，比稠密索引节省了更多的存储空间，但查找给定值的记录需更多的时间。只有当
数据文件按照某个查找键排序时，在该查找键上建立的稀疏索引才能被使用，而稠密索引则可以应用在任何的查找键。

[[file:img/2018-12-20-102634_316x350_scrot.png]]


*** 多级索引
    [[file:img/2018-12-20-103240_507x337_scrot.png]]


*** 辅助索引
    可用于分身任何索引目的：有助于查找给定一个或多个字段的记录。与主索引最大的差别是辅助索引不决定数据文件中记录的
存放位置。而只能告知记录的当前位置，这五位置可能是由建立在其他某个字段的索引确定的。辅助索引总是稠密的。

**** 运用
- 在顺序文件的关系上建立附加索引
- 可以用作某些数据结构的主健索引，如堆。
- 可以用于聚集文件。

**** 间接
[[file:img/2018-12-20-105200_485x354_scrot.png]]


*** 文档检索和倒排索引
- 基本术语
  - 文档可被看成是关系 Doc 的元组
  - 关系 Doc 的每个属性上都建有辅助索引
  - 不给每个属性建立单独的索引，而是把所有的索引合成一个，称为倒排索引。使用间接桶来提高空间利用率

[[file:img/2018-12-20-105905_491x436_scrot.png]]
