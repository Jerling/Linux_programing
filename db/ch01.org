* DBMS系统概述

** 数据库的发展
- 本质： 信息的集合，具体指的是由数据库管理系统管理的数据的集合
- 数据库管理系统的满足：
  - 允许专用语言创建新的数据库并指定模式(数据的逻辑结构)
  - 查询(操纵)语言查询和修改数据的能力
  - 大量数据长期存储，高效存取以查询和修改
  - 持久性，能从故障、多种类型错误或者故意滥用中进行恢复
  - 多用户访问控制，互相不影响(孤立性)，不会发生部分而不是完整的操作(原子性)

*** 早期的数据库管理系统
    由文件系统演变而来。程序员面对的是数据存储格式，早期的数据库管理系统使用不同的数据模型，主要有：层次结构和基于图的网状模型。

存在的问题：不支持高级查询语言

*** 关系数据库系统
    不需要关心存储结构，可用高级查询语言。

*** 越来越小的系统
    基于关系模型的数据库系统可以在个人计算机上运行，而且作为一种工具出现。另一个趋势是文档的使用，使用 XML 来标记。

*** 越来越大的系统
    公司数据库系统经常存储太字节数据。

*** 信息集成
    把许多相关的数据库所包含的信息连接成一个整体。

** 概述
- 单线框：系统成分
- 双线框：数据结构
- 实线：控制和数据流
- 虚线：数据流

[[file:img/gaishu.png]]
- DBA: 管理员
- DDL: 数据定义语言
- DML: 数据操纵语言, 分为两类：
  - 查询响应： 由查询编译器对查询进行分析和优化。
  - 事务处理： 事务是组成一组的若干个查询和其他动作，是必须作为一个原子被孤立地执行的单位。而且必须是持久的。
- 事务处理器的两个主要部分：
  - 并发控制管理器或高度器，负责保证事务的原子性和孤立性
  - 日志和恢复管理器，负责事务的持久性

*** 主存和缓冲管理
- 存储管理器:
  - 任务是控制数据在磁盘上的放置和在磁盘与主存之间的移动。
  - 跟踪文件在磁盘上的位置，获得缓冲区管理器所要求的磁盘专号。
- 缓冲区管理器：
  - 负责将可利用的主存空间分割成缓冲区，缓冲区是与页面同等大小的区域，磁盘块的内容可以传送到时缓冲区中。
- DBMS成分的信息类型
  - 数据：自身内容
  - 元数据：描述数据库的结构及其约束的数据库模式
  - 日志记录：最近寻数据库做的改变，支持持久性
  - 统计信息：数据库中的各个关系或其他成分的大小、取值等信息
  - 索引：支持对数据进行高效存取的数据结构

*** 事务处理
- 执行下列任务：
  - 日志记录：为了保证持久性
  - 并发控制：事务的执行从表面上看必须是孤立的
  - 死锁解决：取消("回滚"或"中止")一个或多个事务

#+begin_quote
- 事务的ACID特性：
  - A: Atomicity，原子性，即事务完全执行或完全不执行
  - I: Isolation，孤立性，表面看起来每一个事务都是在没有其他事务同时执行的情况下执行的
  - D: Durability，持久性，即一旦事务完成了，则事务对数据库的影响就不会丢失。
  - C: Consistency，一致性，所有的数据库都有一致性约束，或关于数据之间联系的预期状况。
#+end_quote

*** 查询处理器
- 查询编译器
  - 查询分析器：由文本形式的查询出发，建立一个树结构
  - 查询预处理器：它对查询进行主义检查，并进行某些树结构转换，将分析树转换为表示最初的查询计划的代数操作树
  - 查询优化器：转换为对于实际数据的最有效的操作序列
- 执行引擎
  - 执行选中的查询计划中的每一步
  - 与DBMS中大多数的成分都有交互
